transcript:
- line: "Some people call you the \u201CFather of DataOps\u201D."
  sec: 1
  time: 0:01
  who: Alexey
- line: "[laughs]Oh, yeah. One guy called me the \u201CGrandfather of DataOps\u201D\
    . That hurt. [laughs]"
  sec: 4
  time: 0:04
  who: Chris
- line: "I'm just thinking about the introduction \u2013 should we use that. Or do\
    \ you prefer I don\u2019t? [laughs]"
  sec: 13
  time: 0:13
  who: Alexey
- line: "Whatever you want. [laughs] Yeah. I've been doing it a while. So yeah \u2013\
    \ whatever term you want to use."
  sec: 18
  time: 0:18
  who: Chris
- line: "This week, we'll talk about DataOps. We have a special guest today, Chris.\
    \ Chris is the CEO and Head Chief at DataKitchen. Some people call Chris the \u201C\
    Father of DataOps\u201D maybe he will tell us why. Welcome to our event today!"
  sec: 80
  time: '1:20'
  who: Alexey
- line: No, thank you. Yeah, thank you for having me. I'm happy to be here and tell
    some stories. So get a blanket and some hot chocolate. And hopefully you won't
    fall asleep.
  sec: 98
  time: '1:38'
  who: Chris
- header: "Christopher\u2019s background"
- line: '[chuckles] I''m sure nobody will. Before we go into our main topic of DataOps,
    let''s start with your background. Can you tell us about your career journey so
    far? Maybe you can also mention why they call you the Father of DataOps?'
  sec: 110
  time: '1:50'
  who: Alexey
- line: "[cross-talk] Yeah, that's fine. So the headline is sort of \u201COld Data\
    \ Nerd,\u201D I guess that's the headline. I grew up in the central part of the\
    \ United States \u2013 Wisconsin \u2013 where there are a lot of people of German\
    \ heritage. My last name, Bergh, probably is evidence of that. So, I worked my\
    \ way through college and then I spent 15 years building software at companies\
    \ like NASA, a lab at MIT, some internet startups, one called Microsoft, and then\
    \ I sort of got the management bug."
  sec: 121
  time: '2:01'
  who: Chris
- line: "And then in about 2005, when my kids were young \u2013 actually, I think\
    \ my son was seven \u2013 I was like, \u201COh, I need a break. I want to be home\
    \ by five. I'm a big software guy, I'm gonna do this data stuff full time. Because\
    \ I've done a little of it, it'll be easy. No problem.\u201D And it wasn't, actually.\
    \ So I managed people who did data science, data engineering, data visualization,\
    \ and my life was bad. It was just\u2026 things were breaking left and right and\
    \ we couldn't go fast enough. People always had more insight questions and my\
    \ team wanted to innovate. So, in some ways, I've been trying to solve that problem\
    \ now for the last\u2026 many years."
  sec: 121
  time: '2:01'
  who: Chris
- line: "In the interim, I think, I've really come to realize that the problem is\
    \ less \u2013 because as an engineer who codes and has written a lot of code \u2013\
    \ it's less about the production of code, and more about the processes around\
    \ the building of the work. It really is that realization, back in 2005 and 2006,\
    \ that I ran a factory \u2013 data came in on one side, and there were places\
    \ where that data was assembled, and models were applied, and results were added\
    \ to it. How to run a good factory was not something I knew as a software engineer.\
    \ So I had to go back and read about industrial process automation and Deming\
    \ and Lean techniques."
  sec: 121
  time: '2:01'
  who: Chris
- line: Was it an actual factory? It wasn't a metaphor, right?
  sec: 252
  time: '4:12'
  who: Alexey
- line: "No, no. Well, it works as a metaphor. In some ways, I think, when you have\
    \ a lot of data pipelines in production, and you have customers who will yell\
    \ at you when they're late or when things are wrong, having a good production\
    \ process becomes really important. But then on the other side \u2013 you run\
    \ a factory, so you have a hard hat \u2013 but on the other side, you really run\
    \ a software team. Because changing the work that's in production, the rate at\
    \ which you can change, the cycle time at which you can change, is really an important\
    \ determinant of customer success. Because you don't want to have an idea and\
    \ then spend three months working on it and then having your customer go, \u201C\
    Eh. That's not quite it.\u201D [laughs]"
  sec: 255
  time: '4:15'
  who: Chris
- line: "So, you run a factory, which is where you need a hard hat, but you also run\
    \ a software team that has to be agile. So how do you do both those things at\
    \ the same time? You kind of have to deal with hipsters and hard hats with cycle\
    \ time and error rates in production. We started this company about eight years\
    \ ago and those issues were really burned into my brain as a leader, like \u201C\
    Solve those.\u201D No one understood what we were talking about then, in the sense\
    \ that this idea of automation, and Lean techniques, and DevOps, was really very,\
    \ kind of \u201Cout there.\u201D"
  sec: 255
  time: '4:15'
  who: Chris
- line: "We had to talk and make a word for it \u2013 we called it \u201CAgile Analytic\
    \ Operations\u201D for a while and \u201CDevOps for Data Science\u201D. And then\
    \ about five, six years ago, we picked DataOps \u2013 we made a list and picked\
    \ DataOps because it was the shortest possible name. It had been in use before\
    \ and we wrote the Wikipedia article, and a manifesto. Over the years, we've had\
    \ to write quite a bit and talk about it, just to get this idea across about the\
    \ \u201Chow your team works,\u201D rather than \u201Cwhat you do.\u201D I mean,\
    \ what you do is cool \u2013 like model selection, or data transformation techniques\
    \ and visualization \u2013 those are all really good things. The basic idea of\
    \ DataOps is, \u201Cif you build a system around that \u2013 that automates a\
    \ lot of the monitoring, deployment, collaboration \u2013 your productivity goes\
    \ way up and your customers are much happier, and you end up doing better work.\u201D"
  sec: 255
  time: '4:15'
  who: Chris
- header: The essence of DataOps
- line: Is this the essence of DataOps?
  sec: 402
  time: '6:42'
  who: Alexey
- line: It's the essence, yeah. It's about the system. It's about how you do things
    rather than what you do. It's about the assembly line and not the individual assembly.
  sec: 405
  time: '6:45'
  who: Chris
- line: "So is it more about tools? Or more about the approach? Or both? Maybe you\
    \ can tell us what DataOps actually is. You said it's a system that automates\
    \ all these things like monitoring, that helps people be more productive \u2013\
    \ so people don't need to worry about broken pipelines and when things get broken,\
    \ they know how to fix it. Is that right?"
  sec: 416
  time: '6:56'
  who: Alexey
- line: "Yeah. I think the focus is really on three things. 1) Lowering errors in\
    \ production. What do I mean by that? I mean \u2013 if you follow data from its\
    \ source all the way to where it creates value, including all the different tools\
    \ and systems. The metaphor I use for that is a factory, right? Where you take\
    \ it and put it in a bucket store, you put it in a database, you aggregate it,\
    \ you run features on it, and build a model, it gets cached in a report, it's\
    \ governed \u2013 all those pieces that go with it. That journey that that data\
    \ goes on, metaphorically, is a factory process. You want to have a factory that\
    \ produces good things \u2013 one that has high quality and low errors."
  sec: 442
  time: '7:22'
  who: Chris
- line: "For us, we think focusing on error reduction means you improve customer data\
    \ trust and if you notify about problems \u2013 and that's really an \u201Cobservability\
    \ problem,\u201D if you want to use a DevOps term, or a monitoring problem, or\
    \ a data quality problem \u2013 the industry hasn't quite named what it is. [laughs]\
    \ But really, it's like \u201CCheck the stuff that you're doing.\u201D An example\
    \ of that is \u2013 about a month ago, I talked to a guy who's a data leader of\
    \ one of the biggest companies in the United States. He got a call from the CEO\
    \ of his company saying a report was blank. It took 26 people out of his team\
    \ of hundreds to find the problem. It took them six hours. And it was a dumb problem,\
    \ like a blank field, this, that \u2013 it's a dumb problem. But the point is,\
    \ you should know if the results work."
  sec: 442
  time: '7:22'
  who: Chris
- line: "Another story I tell is \u2013 in 1990, my first job out of graduate school\
    \ was to work at NASA Ames. At the time, NASA had put the Hubble telescope in\
    \ and it was blurry. Right? It didn't work. And no one had looked through it before\
    \ it launched. No one had said, \u201COh, let's go look at that house next door!\u201D\
    \ And I think that's very true of our data and analytics teams. We do all these\
    \ little individual things and it doesn't work. So error rates in production,\
    \ and then: 2) Cycle time of deployment. How fast you can get new models, new\
    \ datasets, new visualizations, from your mind into production. And that's both\
    \ velocity and risk. Then 3) is really focusing on team productivity, reducing\
    \ the amount of meetings, and collaboration."
  sec: 442
  time: '7:22'
  who: Chris
- line: "Then the last part is sort of a principle that these processes that you do\
    \ \u2013 error rates, and cycle time, and productivity \u2013 they're measurable,\
    \ and you should measure them. You should work on them. Which is surprising that\
    \ we work with people who are very analytically-oriented, but these incredible,\
    \ important metrics on their team success, like \u201CHow much work is your team\
    \ doing?\u201D \u201CHow often are things breaking?\u201D \u201CHow fast are you\
    \ getting new things into production?\u201D Those are really important metrics.\
    \ Overall, it's very value stream-focused. It's not so much about data science\
    \ or data engineering \u2013 it's really about this Lean principle. You always\
    \ optimize the whole and not the part. The reason for that is, obviously, in manufacturing,\
    \ you take an individual workstation and you make it super-powered, there still\
    \ could be a bottleneck later on."
  sec: 442
  time: '7:22'
  who: Chris
- line: "The same thing applies to data and analytic pipelines. You could have the\
    \ best model in the world, but it's fed by bad data, or it doesn't get in the\
    \ hands of production, there\u2019s going to be a problem. Thus, over-optimizing\
    \ a part, both from a throughput standpoint, or the amount of insight it generates,\
    \ seldom works. It\u2019s a very holistic discipline and that also drives productivity.\
    \ In some ways, it's an idea. We have a company and we have software that accelerates\
    \ that idea. But just like Lean manufacturing is an idea, or DevOps in software\
    \ development is an idea, there are tools to accelerate the implementation of\
    \ that idea."
  sec: 442
  time: '7:22'
  who: Chris
- line: "So, correct me if I'm wrong \u2013 you said the focus of DataOps is on three\
    \ things. The first thing is \u2013 you want to reduce the number of errors you\
    \ have in production. We can think of this as a factory line or some assembly\
    \ line, and we want to monitor that everything is fine there."
  sec: 711
  time: '11:51'
  who: Alexey
- line: You want your factory to produce a Mercedes, and not produce like an American
    Motors car from 1975. [laughs]
  sec: 734
  time: '12:14'
  who: Chris
- line: "Then the second thing is the cycle time of deployment, right? And the third\
    \ thing is \u2013 team productivity should increase. Right? I imagine that if\
    \ you want to have an effective factory, it's not only about the tools and the\
    \ monitoring system you have, but also about how the people operate there. So\
    \ it's both about tools and the processes of how exactly people use these tools.\
    \ Is that correct?"
  sec: 742
  time: '12:22'
  who: Alexey
- line: "Yeah \u2013 error rates, cycle time, productivity, and then the last thing\
    \ is measurement of those things. Because you can't improve what you can't measure."
  sec: 770
  time: '12:50'
  who: Chris
- header: Also known as Agile Analytics Operations or DevOps for Data Science
- line: "Did you say that you actually didn't know what to call it? I think there\
    \ were a few names, \u201CAgile Analytics Operations,\u201D then \u201CDevOps\
    \ for Data Science,\u201D but then it was actually you who came up with this term\
    \ \u2013 \u201CDataOps\u201D?"
  sec: 785
  time: '13:05'
  who: Alexey
- line: "No, no. The term was already there. There's a company in the United States\
    \ that has been using \u201CDataOps\u201D since the 80s. I think the term\u2026\
    \ I guess my thought was that we're trying to get an idea across and we needed\
    \ a name for that idea. I'm pretty arbitrary on what the name is, so I felt \u201C\
    the shorter, the better.\u201D We could have called it \u201CTom\u201D and I would\
    \ be happy. But the idea has to be hooked up to a name. The reason is, when we\
    \ went to conferences and we were wearing chef's hats and people were looking\
    \ at us like we were aliens because no one understood what we were talking about."
  sec: 800
  time: '13:20'
  who: Chris
- line: "It's frustrating to go and work for years and build software and then no\
    \ one goes, \u201CWhat? Are you an ETL tool? Are you a data science tool? Do you\
    \ build a data lake?\u201D I'm like, \u201CAh, no. We do this thing called DataOps.\u201D\
    \ \u201CWhat's that?\u201D [laughs] And I think at that conference \u2013 it was\
    \ like a Strata conference, a big conference \u2013 we talked to hundreds of people\
    \ and had all this (it's very frustrating). We finally talked to one guy, and\
    \ I'm describing it to him in these terms, and then he goes, \u201COh, that sounds\
    \ a lot like DevOps.\u201D And I was like, Yeah! Yeah, it's just DevOps for data\
    \ analytic teams.\u201D And he goes, \u201COh! That makes sense. You mean people\
    \ don't do that already?\u201D [laughs] I was like, \u201CNo. No one. And that's\
    \ the problem.\u201D"
  sec: 800
  time: '13:20'
  who: Chris
- line: "There's a sense, if you're coming from a software development background,\
    \ that automating and testing, and monitoring, and the processes your team works\
    \ on, are really important and worthy of investment. And they're not just for\
    \ lesser beings. If you can get those right \u2013 and actually, what's happened\
    \ in software, the team percentage of people who are allocated to, instead of\
    \ doing the work and working on the processes and automating around it, is upwards\
    \ of 25% of the whole team. And their pay is actually sometimes higher than the\
    \ people who are actually doing the stuff like JavaScript or building a web back\
    \ end. If you get the system right, it actually allows you to make a lot of changes\
    \ quickly. So if you look at a data analytic team, 1-2% people are doing it on\
    \ weekends."
  sec: 800
  time: '13:20'
  who: Chris
- line: "It's not seen as \u2018worthy work.\u2019 So that's partly my mission \u2013\
    \ that work is actually really worthy and you own the processes that you work\
    \ on and you can control them. And if you don't, what happens is \u2013 your life\
    \ sucks and it's not good. I've suffered for many years. I suffered in two ways\
    \ \u2013 one is, I was a bad manager. I blamed people instead of the system. If\
    \ you actually read Deming and the Lean principles \u2013 95% of the time, it's\
    \ the system or the process you work in and not the person's fault. As a leader,\
    \ guess who owns the process that people work in? The leader. [laughs]It's much\
    \ easier to say, \u201COh, this person sucks, I'm going to fire them. They're\
    \ letting us down.\u201D I did that and I'm ashamed, actually, that I did that\
    \ sometimes."
  sec: 800
  time: '13:20'
  who: Chris
- line: "It's partly, also, when you are in a data analytic team and your customers\
    \ are rolling their eyes, because they ask you something simple and you say it's\
    \ going to take months, or your data providers are giving you crappy data, and\
    \ you're just caught. [sighs] And it's not a fun job. I think there's a lot of\
    \ evidence of that. Like, Gartner says \u201C60% of projects fail.\u201D There's\
    \ the model \u2013 most models don't make it into production. There's our studies\
    \ of the amount of errors that are happening. We even did a survey with Data World\
    \ of the psychological state of data engineers and it was actually significant\
    \ \u2013 we got 600 responses. So it was a decent, statistically relevant survey.\
    \ 70% of them said their job was so stressful that they wanted a therapist to\
    \ go with it. Actually, I kind of wasn't surprised."
  sec: 800
  time: '13:20'
  who: Chris
- line: "It's not a great job, because once you get something working \u2013 you struggle\
    \ to get something working \u2013 and then people ask you for more and more and\
    \ more. And then things break left and right. Then, you're like, \u201CThis sucks,\u201D\
    \ and then you quit and take another job. [laughs]"
  sec: 800
  time: '13:20'
  who: Chris
- line: Where you do the same thing.
  sec: 1094
  time: '18:14'
  who: Alexey
- line: "Yeah, you do the same thing again, and that sort of complexity and complications,\
    \ and make your life not fun. I just don't think we need to live that way. I think\
    \ there's a better way. And I think it comes from this thing \u2013 this idea\
    \ that we, as people, own our process and we can take control and just don't have\
    \ to suffer. We just don't have to live that way. Because I think it actually\
    \ ends up hurting people's psychology. When it was my 42nd birthday \u2013 this\
    \ was in 2007, or whatever \u2013 one of my data engineers had his 24th birthday.\
    \ So he came in on a one-on-one and we're talking with him, and he started crying\u2026\
    \ Because he just felt bad. Like, \u201CI can't go fast enough. Things are breaking.\
    \ My customers are yelling at me.\u201D And he was just like\u2026 he's a really\
    \ good guy. And I felt like crap."
  sec: 1095
  time: '18:15'
  who: Chris
- line: "Because, here he was, taking it very personally \u2013 and actually, that\
    \ happens to a lot of people. So, we have a backpack full of tasks, we've got\
    \ data providers who don't care, we\u2019ve got systems that are \u201Cfunky,\u201D\
    \ and we're just told to \u201Cwork harder.\u201D You know? I think, if anything,\
    \ the idea of DataOps is about taking control back and saying, \u201CThese methods\
    \ that worked in manufacturing \u2013 these methods that worked in software \u2013\
    \ let's just steal them and apply them to our jobs.\u201D That's it."
  sec: 1095
  time: '18:15'
  who: Chris
- line: You have to own the process or the process will own you, right?
  sec: 1191
  time: '19:51'
  who: Alexey
- line: Exactly. Exactly.
  sec: 1194
  time: '19:54'
  who: Chris
- header: "Defining processes and automating them (defining \u201Cdone\u201D and \u201C\
    good\u201D)"
- line: "All these \u201Cfunky\u201D systems, bad quality data \u2013 that will keep\
    \ you awake at night, right? You don't want to have that. You want to be in control\
    \ of these issues, so you need to take control of that. Yes, so you said that\
    \ having these processes is important, so we need to work on these processes and\
    \ automate them. But how do we actually do this?"
  sec: 1196
  time: '19:56'
  who: Alexey
- line: "Let's say, I'm a data engineer \u2013 I just joined a startup and I need\
    \ to build a data pipeline because the management wants to have a dashboard. I\
    \ do this in Spark or whatever. It works. And then the management, of course,\
    \ were satisfied and then they started giving me more and more and more tasks."
  sec: 1196
  time: '19:56'
  who: Alexey
- line: "I don't have time to just slow down and then take control of this and make\
    \ sure that it's not duct taped together. I want to be sure that it\u2019s a solid\
    \ thing that does not wake me up at night. How do I go about defining these processes\
    \ and automating them?"
  sec: 1196
  time: '19:56'
  who: Alexey
- line: "Well, I think it's the definition of success and the definition of \u201C\
    done.\u201D So I think they're definitional questions. Running towards making\
    \ your customer happy and being a hero is bad in and of itself. There\u2019s the\
    \ heroic act of bolting together Spark queries and dashboards\u2013 however you\
    \ want to do it \u2013 integrating data and having the higher ups go, \u201COh,\
    \ thank you. That's great.\u201D Then you get 10 follow-up questions and you're\
    \ working on the weekend \u2013 somebody changed something on the data feed and\
    \ you're fixing it on Sunday. So, I think that that's not bad, but what does \u201C\
    good\u201D look like? And what good looks like is \u2013 if you've done something\
    \ that you can run it, and it will tell you if something's wrong while it's running.\
    \ Then, you'll be able to make a change somewhere and you'll know if there's a\
    \ problem in it. And you can also hire a 22 year old who can start working on\
    \ it and be able to make a change quickly."
  sec: 1262
  time: '21:02'
  who: Chris
- line: "So what is \u201Cdone\u201D and what is \u201Cgood,\u201D we have to talk\
    \ about. Because a lot of times we think \u201Cdone\u201D means our customers\
    \ are happy. And then it's on to the next thing. But then the discussion with\
    \ the customer comes and it\u2019s like, \u201CLook, it's not done because of\
    \ those situations.\u201D I need to do more and so we need to set up a system\
    \ to handle this complexity. I was a software engineer in 1996 and I was working\
    \ on live websites \u2013 it was a very early sort of Facebook-ey website. We\
    \ had 4 million people on it. I was restarting the server, kicking people off,\
    \ I was there late at night. And that was cool. I was like, \u201CHey, you're\
    \ a hero.\u201D [laughs] Do you want big companies doing that nowadays? No. So\
    \ about what's \u201Cdone\u201D and what\u2019s \u201Cgood\u201D \u2013 I think\
    \ you have to have a discussion with people."
  sec: 1262
  time: '21:02'
  who: Chris
- line: "Also, it becomes a question of trade-offs. Like, \u201COkay, I can go really\
    \ fast, but I'm building some technical debt in the next sprint. Can I have some\
    \ time to reduce that? Or else going to be able to do less in the future?\u201D\
    \ Right? \u201CCan I have some time to refactor?\u201D \u201CCan I have some time\
    \ to write some documentation?\u201D \u201CCan I just write some governance documents?\u201D\
    \ \u201CWe want to hire more people, so I want to put in more automated tasks\
    \ and more automation around it \u2013 to make it easy.\u201D It becomes a discussion\
    \ of time allocation. Because if you're in that situation where your value only\
    \ comes from the insight you've generated and not this discussion, it just becomes\
    \ a harder life. Because you get buried and then unhappy, and then\u2026 I've\
    \ seen it \u2013 people quit. A lot of people have entered the data and analytics\
    \ field in the last five years and, actually, there are a lot of unhappy people.\
    \ So it's because of this situation."
  sec: 1262
  time: '21:02'
  who: Chris
- line: "Okay. So, in this case, I think you partly gave an answer to that \u2013\
    \ as a data engineer who just developed this Spark pipeline and put together some\
    \ stuff on a dashboard \u2013 do I immediately go to the management and show that?\
    \ Or do I wait a little bit and then maybe think, \u201COkay, is it done? Is it\
    \ ready to be shown?\u201D And then maybe I think about the processes and think\
    \ about \u201CHow can I make sure that this thing is actually reliable?\u201D\
    \ At what point do I go to management and say, \u201COkay, this is ready.\u201D\
    ?"
  sec: 1445
  time: '24:05'
  who: Alexey
- header: The balance between heroism and fear (avoiding deferred value)
- line: "DataOps is all about balance between heroism and fear. One way to do it is\
    \ to have fear and sort of say,\u201D I'm not going to show it to people for weeks\
    \ and weeks, while I do all this stuff.\u201D And\u2026"
  sec: 1481
  time: '24:41'
  who: Chris
- line: I can see how that might end up not really good.
  sec: 1496
  time: '24:56'
  who: Alexey
- line: "It might not be good. Because all that work that you're doing \u2013 you\
    \ may capture the requirements wrong. So, like a lot of things in life, it's about\
    \ balance between heroism and fear. I do think you should get early feedback from\
    \ your customers. And I think you should tell them, \u201CLook, I'm giving this\
    \ to you \u2013 I haven't checked the data perfectly. I haven't automated, I haven't\
    \ tested it. It's not in version control. This isn't production-ready yet. So\
    \ I've got some technical debt that I'm going to have to add.\u201D You don't\
    \ know \u2013 that may be good enough and then they're on to the next thing and\
    \ they want you to throw it away. Or they may have six more things that are based\
    \ on it. This may be the cornerstone that you can build the whole infrastructure\
    \ on."
  sec: 1499
  time: '24:59'
  who: Chris
- line: "You don't know what's in your customer\u2019s head and that's okay. It's\
    \ okay to be humble and iterate your way into really understanding what your customer\
    \ wants. Like, I've made this mistake \u2013 you have a lot of calculus, graduate\
    \ degrees, \u201CMan, I'm really smart. My business customer drank beer and went\
    \ to business school, and I\u2019ve got to work for him.\u201D And you're kind\
    \ of pissed off, like, \u201CMan, I did all this calculus.\u201D But the reality\
    \ is \u2013 they know a lot of things that you don't. So we happen to have this\
    \ strange talent of high abstraction, putting data together, and we like our beer,\
    \ but we're not good business people. So, I think, giving them early bits of what\
    \ you've done helps to make a dialogue with your customer on what is on their\
    \ mind. What you need to do, partly, is that."
  sec: 1499
  time: '24:59'
  who: Chris
- line: "Our tendency as technical people is to build very complicated things \u2013\
    \ these sort of Crystal Castles. I stopped coding five years ago, and I miss it.\
    \ I want to go, partly, sometimes I have to stop myself. Because it's like, I\
    \ want to go off for like a month and code \u2013 because it's really fun. [laughs]\
    \ But I've learned that, if I do that \u2013 I'm often wrong. Getting early feedback,\
    \ it helps. We're really just trying to maximize the amount of value you bring\
    \ to the organization. And that's what really matters. It's not infrastructure\
    \ \u2013 it's not deferred value, it\u2019s value."
  sec: 1499
  time: '24:59'
  who: Chris
- header: The Lean approach
- line: "I think this is one of the principles that you mentioned \u2013 this Lean\
    \ approach, right? In Lean \u2013 I think there is a book called \u201CLean Startup\u201D\
    \ \u2013 you don't do that. You don't close yourself in a garage for a year and\
    \ implement something that maybe nobody cares about. You actually show it to people,\
    \ get feedback from them, and then iterate on this feedback. This is one of the\
    \ principles behind DataOps as well? And DevOps?"
  sec: 1662
  time: '27:42'
  who: Alexey
- line: "Exactly, yeah. It's a very iterative methodology that's based on finding\
    \ the right balance between heroism and fear \u2013 between being humble about\
    \ what you know and forcing feedback from your customers. It comes from Agile\
    \ software and the Agile Manifesto \u2013 the DataOps manifesto we wrote is sort\
    \ of a blatant rip-off of the Agile Manifesto. The problem with data is a little\
    \ more complicated than DevOps, because we have two major cycles of iteration\
    \ and not one. So, one is your iteration with the customer on \u201CIs this data\
    \ telling you what you want?\u201D And \u201CAm I showing it in the right way?\u201D\
    \ And then the second is, you've got an iteration with the data itself, like,\
    \ \u201CIs it actually predictive?\u201D \u201CIs this the right data set?\u201D"
  sec: 1694
  time: '28:14'
  who: Chris
- line: "So you've got these two cycles of iteration. In software, you sort of an\
    \ application, you send it to someone, they go \u201CNo. Change this. Change that.\u201D\
    \ You've got one. You're really working on, \u201CCan they use it?\u201D And \u201C\
    Do they understand it?\u201D And we have that in data teams, but it's also like,\
    \ \u201CCan the data actually say what is statistically relevant?\u201D \u201C\
    Can it support the story that you want the application to have?\u201D So it's\
    \ a data problem and an application problem \u2013 and that makes it complicated.\
    \ Also the value streams \u2013 the factory as data goes \u2013 is much more organizationally\
    \ complicated. In bigger companies: you have an IT team, maybe a data warehouse\
    \ team, a data lake team, you'll have a data science team, you'll have end-user\
    \ business analysts, you have governance \u2013 and then over here, you'll have\
    \ the person who's receiving the value. So you end up with these silos of optimization."
  sec: 1694
  time: '28:14'
  who: Chris
- line: "If you really believe in these Lean principles like I do, you need to optimize\
    \ the whole. You need to optimize across all the teams. And you need to think\
    \ about how \u201CIf I'm going to change one piece, its effect on the other.\u201D\
    \ That's what happens a lot of times \u2013 that one person who has one pipeline\
    \ for the startup, the startup gets successful \u2013 they hire a data engineer,\
    \ and a data scientist, they have business analysts on it, they hire some more.\
    \ Pretty soon, you've got the data engineering team, and the data science team,\
    \ and you've got a couple of different lines of business with business analysts\
    \ on, and then you hire someone for governance, and then you've got three definitions\
    \ of metrics in three different places. People are running around crazy trying\
    \ to get stuff done, but you're still not achieving what you think you can. So\
    \ it becomes a sort of balkanization. The separation of these teams actually makes\
    \ people \u2013which makes sense \u2013 but it's harder then to deliver iterative\
    \ value. [cross-talk]"
  sec: 1694
  time: '28:14'
  who: Chris
- header: Avoiding silos
- line: You have to put everyone together, right?
  sec: 1883
  time: '31:23'
  who: Alexey
- line: "Well, people put blinders on. The data team worries. My job is to get value\
    \ up to here [gestures with hand]. And I don't really know what happens. I've\
    \ washed my hands. What does that data science team do? I don't know. And then\
    \ the people who are doing visualization, who've taken maybe a scoring model and\
    \ the data, they're like, \u201CThese people are too slow. These data science\
    \ people don\u2019t understand the business. I'm just gonna go make the segmentation\
    \ in Tableau and change it and throw all their stuff out. I'm gonna go to the\
    \ raw data and bypass all this stuff they've done.\u201D So everyone's optimizing\
    \ their part."
  sec: 1886
  time: '31:26'
  who: Chris
- line: "I've run into cases where teams have spent years working on something and\
    \ it hasn't gotten to production, \u2013 large teams, teams of 400 people \u2013\
    \ they spent two years and nothing's in production. Nobody's receiving value.\
    \ I've learned to desperately want to deliver value to people who use it. Sometimes\
    \ those are people using Tableau. Sometimes those are business people. And if\
    \ I don't, I get really worried that something's wrong. And that sort of instinct\
    \ is what I want a lot of people to have. Unfortunately, it's not there \u2013\
    \ to be blunt."
  sec: 1886
  time: '31:26'
  who: Chris
- line: "There are a lot of people who are like, \u201CAh, I'm doing enterprise infrastructure\
    \ and that's it. I'm building a data lake.\u201D \u201CWell, who's gonna get value?\u201D\
    \ \u201CI don't know. We're gonna get all the data in the lake and I'm going to\
    \ build it and it\u2019ll come. Things will be great.\u201D And then there are\
    \ this sort of techno fetishists who are like, \u201CHey, we got a nice new tool.\
    \ I went to their conference and had a great time. This tool is gonna accomplish\
    \ everything for us. So if we just put all our data in this tool, good things\
    \ are gonna happen.\u201D"
  sec: 1886
  time: '31:26'
  who: Chris
- line: Hadoop, right? I think Hadoop 10 years ago was [cross-talk]
  sec: 1994
  time: '33:14'
  who: Alexey
- line: "Hadoop 10 years ago, the cloud now, \u201CPut all the data in the cloud,\
    \ good things are gonna happen.\u201D You know, it's Hadoop, it\u2019s Spark,\
    \ it was Oracle before that, and cartridges and\u2026 it's a way to defer value.\
    \ Deferred value as a trap. Like, \u201CI'm going to build something really good\
    \ and that's going to be generative.\u201D It\u2019s a trap that often hurts you."
  sec: 1997
  time: '33:17'
  who: Chris
- header: The 7 steps to DataOps
- line: "You described this picture of isolated teams \u2013 data analytics teams\
    \ \u2013 who don't care about data scientists, and then there are data engineers\
    \ who just create data lakes because they want to. If we go back to that one data\
    \ engineer that everything started from \u2013 what could these data engineers\
    \ have done to actually avoid all that? We talked about automation \u2013 thinking\
    \ of processes and automating them \u2013 which things should that data engineer\
    \ have automated to avoid all that? Not just the data engineer, but I guess the\
    \ management also \u2013 what should have done to live happily ever after?"
  sec: 2027
  time: '33:47'
  who: Alexey
- line: "Well, we used to give this talk called \u201CThe Seven Steps to DataOps,\u201D\
    \ so I'll talk through that. One of the first steps is, \u201CTake your code and\
    \ put it in version control.\u201D Don't have it on your hard disk somewhere or\
    \ file share. All the code \u2013 the report, the transformations. That's one\
    \ thing. Then the second is, \u201CWrite automated tests that run in production.\u201D\
    \ You're expecting 1000 rows, you're expecting this report to have this value\
    \ \u2013 write a test to check it and monitor it. The third is, \u201CWhen you're\
    \ changing something in development, run automated tests against that to judge\
    \ regression or impact analysis.\u201D If you change something on the back end,\
    \ you\u2019re able to tell if the front end is broken in a very simple way. So\
    \ it's testing, it's automating deployment, it's version control \u2013 and then\
    \ a lot of times it's counting when you have problems."
  sec: 2077
  time: '34:37'
  who: Chris
- line: "If you have an error, make a JIRA ticket or put it in a spreadsheet. If you\
    \ want to improve your cycle time, just every week \u2013 start trying to deploy\
    \ every week. And if you don't, note that. I think those things are good. Then\
    \ you should also have this case of, \u201CCan I hand this off to someone else?\
    \ Do I have to own this for the rest of my career here?\u201D There's a lot of\
    \ times in these data processes where, like, \u201CI got my Spark jobs, they run,\
    \ and then I hit a button on my reporting engine to refresh.\u201D Is that a problem?\
    \ Well, no. And then you get these documents that say, \u201CDo this on Thursday.\
    \ Do this on Friday. Check this.\u201D and they become these sort of playbooks."
  sec: 2077
  time: '34:37'
  who: Chris
- line: "You know, I'm sort of against checklists. I'm more part of the Anti-Checklist\
    \ Manifesto. I'm like \u201CWrite code that automates that.\u201D Everything that\
    \ you're doing a checklist for, automate it away so that the system just runs\
    \ without you and will tell you if something's wrong. The next thing is \u2013\
    \ you can hire someone just out of college and they can make a change in their\
    \ first week without having to talk to you."
  sec: 2077
  time: '34:37'
  who: Chris
- line: Is this DataOps?
  sec: 2233
  time: '37:13'
  who: Alexey
- line: "That\u2019s DataOps. Or is it DevOps? I don't know, like \u2013 I don't really\
    \ care. [chuckles] It's very focused on this sense of automation. Actually, it's\
    \ badly named \u2013 it's more like, \u201CCode that acts upon data operations.\u201D\
    \ [laughs] Because it's not really about the data, honestly. It's about the things\
    \ acting upon the data."
  sec: 2234
  time: '37:14'
  who: Chris
- line: "You mentioned checklists. If you have a checklist \u2013 you don't like checklists\
    \ you said \u2013 but it's probably a good first step, right? To have this checklist.\
    \ [cross-talk] It's better to automate a checklist that exists rather than, you\
    \ know, not automate anything."
  sec: 2263
  time: '37:43'
  who: Alexey
- line: Absolutely. Yeah, absolutely. [cross-talk]
  sec: 2279
  time: '37:59'
  who: Chris
- header: Wanting to become replaceable
- line: "So that\u2019s the first step for that data engineer, before they hire a\
    \ college graduate. Right? To have some sort of system."
  sec: 2281
  time: '38:01'
  who: Alexey
- line: "Yeah. You want to have a vacation, right? You want to have weekends off.\
    \ So writing a Wiki page that says, \u201CHere's how you operate this thing,\u201D\
    \ is good. Then having that discussion with your customer saying, \u201CLook,\
    \ I know this is taking 10 minutes a week, but if I quit \u2013 you're going to\
    \ be stuck and no one's going to be able to do this.\u201D Or, \u201CWe want to\
    \ hire some more people and you want me to do more things. I'm spending two hours\
    \ a week on this production stuff and I should be spending two seconds or I should\
    \ be spending no time and just have an email come.\u201D So I think that the sense\
    \ is that this is the idea that you're automating, and also that you're running\
    \ towards errors. Inevitably, data systems break. That's just the fact of life.\
    \ So, what you want to do is \u2013 when you have a problem, you want to find\
    \ out where it is as fast as possible, and automate the fix to that. Tests and\
    \ automation \u2013 that's a good thing. Some organizations end up in shame and\
    \ blame culture, where errors happen and people don't want to talk about it. That's\
    \ why I think counting your errors and tracking them is important. And I think\
    \ there are a lot of organizations who have very poor data quality \u2013 they're\
    \ missing their SLAs, no one trusts the data \u2013 but they're claiming great\
    \ success. [laughs] It's like, \u201CNo, it's not working. Maybe you should just\
    \ have a report that actually has those things in?\u201D Anyways, does that help?"
  sec: 2288
  time: '38:08'
  who: Chris
- line: "Yeah. I guess one of the things you mentioned, which is a key here is \u2013\
    \ as that only data engineer, you don't want to be indispensable, right? You want\
    \ to be replaceable. If you\u2019re the only person who knows how the system functions,\
    \ then maybe in the short term, you're good. You can ask for a salary raise because\
    \ they're not going to fire you."
  sec: 2386
  time: '39:46'
  who: Alexey
- line: "But in the long term, it's not really good. Because you want to have vacations,\
    \ you want to relax on weekends. So you actually want to be replaced and all these\
    \ things that you mentioned, like automating, checklists, and all the other things\
    \ \u2013 they really help."
  sec: 2386
  time: '39:46'
  who: Alexey
- line: "Yeah. I think it's not wrong, emotionally, to want to be indispensable. I\
    \ spent a lot of my twenties wanting to be indispensable on a software team and\
    \ wanting to be the \u201Cstudly guy who built the cool thing,\u201D and get the\
    \ praise from other people. I was good, you know, and I was like, \u201CI'm gonna\
    \ build the cool thing!\u201D And that's not wrong. It's normal. But you don't\
    \ want to build such complexity that you have to own it for the rest of your career,\
    \ or that no one else can take it over. We have software-developed terms like\
    \ \u201Ctechnical debt.\u201D"
  sec: 2429
  time: '40:29'
  who: Chris
- line: "My favorite term is \u201Chairball\u201D. Like a big hairball of stuff, like\
    \ from a cat that\u2019s throwing up a hairball. I actually think that that's\
    \ sort of true \u2013 you can very easily create a hairball that no one else can\
    \ untangle. Thus, your definition of what's \u201Cgood\u201D and what's \u201C\
    done\u201D has to change. You're not \u201Cdone\u201D when you've created a hairball.\
    \ It's not \u201Cgood\u201D. I also think when other people do that on your team,\
    \ you have to go \u201CEw! I know all the business people are loving you, but\
    \ you just coughed up a huge hairball. And that's not good!\u201D [laughs] \u201C\
    You're not done and it's not good!\u201D"
  sec: 2429
  time: '40:29'
  who: Chris
- line: Do people like you after they hear that from you? [laughs]
  sec: 2513
  time: '41:53'
  who: Alexey
- line: "Eh. I think there's nice ways to say things. There's business language, like,\
    \ \u201CLet's talk about what \u2018done\u2019 means and let's talk about what\
    \ \u2018good\u2019 means. Okay? Yeah, you did this great, but you're not done\
    \ and it's not good. Because it can't be handed off, because it's not version\
    \ controlled. Let's write it down and let's agree about what \u2018done\u2019\
    \ and \u2018good\u2019 is for our team \u2013 with our customers.\u201D I think\
    \ there are methods. I'm being facetious on the emotional stuff."
  sec: 2520
  time: '42:00'
  who: Chris
- line: "I do find that, as a manager and a leader, I've had to publicly praise and\
    \ privately criticize people who are heroes, like, \u201CHey, you worked all weekend.\
    \ Fantastic.\u201D And then like, \u201COkay, you worked all weekend\u2026\u201D\
    \ Sometimes we have to do that. Sometimes, you do have to work all weekend. But\
    \ that should be rare. And sometimes you do have to create hairballs. And that's\
    \ okay. But you shouldn't do that 95% of the time."
  sec: 2520
  time: '42:00'
  who: Chris
- header: DataOps is doable
- line: "All these steps you described that this particular data engineer could take\
    \ to improve the system \u2013 they don't seem to be that difficult or that complex.\
    \ Okay, put the code in Git. I think everyone's doing this \u2013 I hope. Then\
    \ tests. Okay, this step is a little bit less easy, because nobody likes writing\
    \ tests, but it's doable. Then integration tests \u2013 you want to be certain\
    \ that your system runs. Automating deployment, this is actually fun for engineer\
    \ to figure out how CI/CD works and then implement that."
  sec: 2586
  time: '43:06'
  who: Alexey
- line: "As a technical person, I'm sure they will love that. I liked playing with\
    \ GitHub actions recently \u2013 I didn't know how to use them. I spent like a\
    \ weekend figuring this out and it was fun. So all these things that we talked\
    \ about, they make sense and they are implementable. But why isn\u2019t everyone\
    \ actually implementing them? Why do we have all these problems that we talked\
    \ about? Why do they still happen?"
  sec: 2586
  time: '43:06'
  who: Alexey
- line: "That's a good question. I think there are a couple of reasons. One is, there's\
    \ some people who are on the journey. They do those actions and they write a couple\
    \ of unit tests against their Python code. And then they automate. Instead of\
    \ manually deploying the steps, they use CI/CD, they have some unit tests, and\
    \ then they still run into problems. So it's partly DevOps, they sort of have\
    \ this model of, \u201COh, I use Git. I'm doing DevOps. It's good.\u201D But partly\
    \ like, \u201CHow do you actually prove that things work? What's provable that\
    \ a data system works?\u201D And then \u201CHow do you optimize \u2013 how do\
    \ you have the whole system, as opposed to just your part?\u201D Those two things\
    \ are hard for people."
  sec: 2652
  time: '44:12'
  who: Chris
- line: "So number one is like, \u201CTo prove data systems work, you have to pour\
    \ data into them. You have to run them with data that's realistic.\u201D Sometimes\
    \ \u2013 in a startup, maybe \u2013 you're dealing with marketing data and you\
    \ can just run the whole dataset over again. I'm a big fan of more functional\
    \ data systems, where the raw data is immutable. You can run it from cloud resources\
    \ that are cheap, disks as cheap. If you can run your whole system from start\
    \ to finish every time. So I would say that a data engineer in development should\
    \ have the raw data immutable and just run the whole thing \u2013 the Spark jobs,\
    \ the visualizations \u2013 and make sure that you can prove it. Then have that\
    \ be the new version of production. Other ways if you're deploying, that's the\
    \ end-to-end the challenge, then there\u2019s the definition of \u201CWhat's a\
    \ good test? What's a good data test?\u201D  This is a challenge. Getting good\
    \ and accurate refresh test data that fits GDPR is a challenge."
  sec: 2652
  time: '44:12'
  who: Chris
- line: "Sometimes, actually doing the automation of environments \u2013 if you've\
    \ got to GitHub Action, well, what proves that that development system works?\
    \ Well, you've got to have test data. You've got to run your system end to end\
    \ against that test data. That means you've got some hardware disk startup/shutdown\
    \ \u2013 you're doing some DevOps-ey work. None of that stuff is not doable. I'm\
    \ just saying it's work and it's really important work. You shouldn't just devote\
    \ 1% of your time to it \u2013 you should think about 15% of your time on that.\
    \ That may seem like a lot, but it's not. [laughs] Companies who do that, they\
    \ end up doing more work \u2013 they actually get more done. You're stepping back\
    \ to do more. Conceptually, I think there are still some gaps in what people think\
    \ on the application of DevOps principles to data and analytic systems. I think\
    \ there are still some gaps in optimizing the part versus the whole."
  sec: 2652
  time: '44:12'
  who: Chris
- line: "I think there's some gaps in environments, and I think there's just gaps\
    \ in leadership, honestly. I just there's a lot of data and analytical leaders\
    \ don't get it yet. That's sort of why I talk to people. I think it's still early.\
    \ I used to run software teams in 1999 and I could ship software every three months,\
    \ and I was hot shit. I was good in 1999. I ran a team of 30 people and we could\
    \ ship software every three months. That was like \u201Cgood startup best practice\u201D\
    . Right now, I would not get a job. [laughs] I would say, \u201CI know how to\
    \ ship code every three months!\u201D People would go \u201CWhat?!\u201D And I'd\
    \ say \u201CYou can't do it any faster!\u201D And then people would go, \u201C\
    No, you should be able to press a button. When someone does a Git commit, the\
    \ whole system should tell you if it's wrong.\u201D And why? Well, people have\
    \ learned what's \u201Cgood\u201D and what's \u201Cdone\u201D. It is a very different\
    \ set of ideas. And that's what I want to have happen in data and analytics teams."
  sec: 2652
  time: '44:12'
  who: Chris
- header: Testing tools
- line: "Are there any tools you can recommend? You described all the difficulties\
    \ that the teams face when implementing all these DataOps principles. It's not\
    \ just about having CI/CD configured, but you also need to think about integration\
    \ tests, the data has to be GDPR-compliant. How do we actually run these tests\
    \ on data? Are there tools? There is also a question in the chat, for example,\
    \ \u201CDo we use things like Great Expectations? Or are there any other tools\
    \ that we can use to make these steps easier?\u201D"
  sec: 2905
  time: '48:25'
  who: Alexey
- line: "Yeah, a lot of really\u2026 I think DBT has tests. Great Expectations \u2013\
    \ a test engine. You don't really need it. You can write tests in a lot of ways\
    \ pretty simply. You can do row count checks. You can write these expectations\
    \ and write SQL queries to do the tests. So the whole idea is that those tests\
    \ themselves are done automatically, that they're in version control, that they\
    \ live fairly close to the code that you're running on, and that they're run during\
    \ production, and that all those tests are run during development. So, that's\
    \ it. Think of \u2013 10% of your work should be developing automated tests."
  sec: 2939
  time: '48:59'
  who: Chris
- line: "If you're a software engineer, and someone wrote 500 lines of software code\
    \ \u2013 and there were no automated tests, you\u2019ve got a problem. And tests\
    \ are different. Like, unit tests are nice, but you also need system tests. You\
    \ need to run the whole thing from end to end. When we first started the company,\
    \ we had a small customer and I was the data engineer for it. I was sort of writing\
    \ our product and doing data engineering. There's the inevitable problems, and\
    \ I just write more tests, and our product helped us do all that. That's sort\
    \ of why we're a product company \u2013 why we build a product \u2013 because\
    \ we want to make those automation things easy for people."
  sec: 2939
  time: '48:59'
  who: Chris
- header: DataOps vs MLOps
- line: "Okay. There is another question. \u201CWhat are the differences between DataOps\
    \ and MLOps? Are they the same thing or different?\u201D"
  sec: 3042
  time: '50:42'
  who: Alexey
- line: "There are two answers to that. One is \u2013 as an engineer, no. It's the\
    \ same freaking idea. It's just DevOps and Lean applied to data, so you call it\
    \ DataOps or MLOps. Gartner\u2019s been using this term XOps. So I don't really\
    \ care \u2013 the principles matter, not the not the moniker. Right? [cross-talk]"
  sec: 3055
  time: '50:55'
  who: Chris
- line: "When I say this, people roll their eyes and say, \u201CNo, MLOps is different,\
    \ because it's about machine learning.\u201D"
  sec: 3075
  time: '51:15'
  who: Alexey
- line: "Yeah\u2026 you know, you're not different when you do machine learning. I\
    \ mean, it's cool, right? But like, it's code that acts on data, just like ETL\
    \ code, just like this code. You're building an application. You have more investigating\
    \ \u2013 those two cycles are a little bit different. But yeah, I've gone to conferences\
    \ and had data scientists basically telling me I'm wrong \u2013 that data science\
    \ is different and that these process, DevOps principles don't apply. No, they\
    \ don't apply directly. You need to adapt the concepts to models. And you can\
    \ call that MLOps. You need to adapt them to data science and visualization."
  sec: 3081
  time: '51:21'
  who: Chris
- line: "I use the term DataOps to encompass\u2026 I think, the data, the model, the\
    \ visualization, the governance \u2013 I think of those as a unit. So optimize\
    \ the whole of that, not just your part. So do \u201COps\u201D on all of that.\
    \ Just think of something really simple, like \u201CI add a new table to a database.\u201D\
    \ Really simple. I want to add a new table to the database, so maybe I\u2019ve\
    \ got to change how it's joined to another table. Maybe that ends up as a new\
    \ feature in the model. So the model\u2019s gotta be retrained. And then I want\
    \ to take the result of that and change my visualization. And then I've got to\
    \ change my data catalog. The principles say, \u201CAutomate all of that.\u201D\
    \ Right? Put that all in version control. Deploy it all as a unit as once. The\
    \ new code, the new model, the new visualization, and the new governance, the\
    \ new data catalog \u2013 all those things are versional. They're all just code,\
    \ right? Then, in development, pour some good data in, run tests against the new\
    \ thing that you developed \u2013 the new table \u2013 and run all those other\
    \ tests that you've had over the years to see if you've broken anything else.\
    \ It's a very simple concept, but I think it does take some work to do that. And\
    \ I think that's where people are struggling, because they need some automation\
    \ to help them do it."
  sec: 3081
  time: '51:21'
  who: Chris
- header: The Head Chef at Data Kitchen
- line: "So your position \u2013 your title \u2013 is Head Chief at Data Kitchen."
  sec: 3213
  time: '53:33'
  who: Alexey
- line: "I\u2019m Head Chef, yeah."
  sec: 3219
  time: '53:39'
  who: Chris
- line: So can you tell us more about what you cook there?
  sec: 3221
  time: '53:41'
  who: Alexey
- line: "[laughs] As you know, I am a suburban American man, so my cooking is restricted\
    \ to grilling outside \u2013 grilling meats outside. I grew up in Wisconsin, so\
    \ one of my favorite things is bratwurst. With sauerkraut root and beer. In Milwaukee,\
    \ Wisconsin, that's like the thing. I had Braunschweiger for lunch yesterday.\
    \ So I'm like [laughs]"
  sec: 3225
  time: '53:45'
  who: Chris
- line: "Pretty typical in Germany. [cross-talk] There\u2019s a very large German\
    \ population there, right?"
  sec: 3254
  time: '54:14'
  who: Alexey
- line: Yeah. In the central part of the US, there were a lot of Germans and Scandinavians
    in the late 1800s. Where I live now, in Boston, there's not. I mean, Germans themselves
    are sort of the largest ethnic group by count in the United States. Or maybe they
    were, I don't know. Maybe it's Hispanic now, I don't know. But, yeah. I'm a Head
    Chef just because it's fun. Our company, we're 45 people. We've been around for
    eight years. We're profitable. We're growing. And we're on this mission to get
    people to adopt DataOps and we want to sell some software along the way. Yeah,
    we do.
  sec: 3263
  time: '54:23'
  who: Chris
- line: "We think our software is great. But more than that, the reason I do this\
    \ is I want people to get the idea and see that they don't have to live in this\
    \ way. My feeling is that it's actually \u2013 I'm very optimistic \u2013 the\
    \ fact that you're playing around with GitHub Actions, that's fantastic. I just\
    \ think people are getting it. They're going to get there and it's going to become\
    \ common practice five years from now. You know, the definition of \u201Cgood\u201D\
    \ and \u201Cdone\u201D is just going to switch, and people are gonna go \u201C\
    Screw this, I am not working.\u201D I remember, on StackOverflow, there was this\
    \ \u2013 Joel's had this list of questions to ask your team."
  sec: 3263
  time: '54:23'
  who: Chris
- line: 12 questions, right?
  sec: 3347
  time: '55:47'
  who: Alexey
- line: 12 questions to ask, yeah. There's going to be that for data teams. And it's
    going to be very similar. There's gonna be DataOps in these questions.
  sec: 3349
  time: '55:49'
  who: Chris
- line: You should put this together.
  sec: 3356
  time: '55:56'
  who: Alexey
- line: "[laughs] Yeah, is that. Yeah, \u201CAsk these 12 questions and don't take\
    \ a job.\u201D [laughs] If they're like that. All those were (I remember most\
    \ of them) like, \u201CHow much DevOps are you doing, really?\u201D \u201CHow\
    \ agile are you when it comes to DevOps?\u201D I think the same answer is going\
    \ to come. And I think there's more people who are going to stop and rebel against\
    \ heroism and rebel against fear, and say, \u201CThere's got to be a better way.\u201D"
  sec: 3359
  time: '55:59'
  who: Chris
- header: "What\u2019s grilling at Data Kitchen?"
- line: Okay. So you said as the cook, you like to grill data at Data Kitchen? So
    what is the software you mentioned? What are you grilling?
  sec: 3392
  time: '56:32'
  who: Alexey
- line: "It's a platform to automate. We do some of those things that we talked about.\
    \ We help people. I guess, the first thing is \u2013 we're the factory. We allow\
    \ you to plug in your data science tool, your data engineering tool, your data\
    \ visualization tool, your governance tool, and then we can observe all those\
    \ in production, run tests against them, and we can help build environments for\
    \ you. And then if you want, we could do even more. We could orchestrate all of\
    \ them."
  sec: 3400
  time: '56:40'
  who: Chris
- line: "What we're trying to do is help people where they are and where they start.\
    \ We tend to sell \u2013 we have a different way of building the company. We're\
    \ profitable. We never took any financing. So, we're trying to grow a reasonable\
    \ company and stay along for the long term. It's actually been good, because there's\
    \ a lot of companies in the DataOps space who've been funded and growing, like,\
    \ Superconductive just got an enormous amount of money. And a bunch of observability\
    \ vendors that they put\u2026 [cross-talk]"
  sec: 3400
  time: '56:40'
  who: Chris
- line: Monte Carlo, right? They raised quite a lot of money.
  sec: 3470
  time: '57:50'
  who: Alexey
- line: Yeah. So that's good, right? Because they'll be able to use that money to
    talk about these ideas. And that's a really good thing. People are going to hear
    it more and more and eventually it'll change.
  sec: 3473
  time: '57:53'
  who: Chris
- line: Yeah. We had Barr on this podcast talking about that. It was a really good
    talk.
  sec: 3486
  time: '58:06'
  who: Alexey
- line: "Yeah, yeah. I think that's fantastic. My mindset is \u2013 I was so far out\
    \ in the wilderness talking about these things six years ago, [chuckles] like\
    \ \u201CIs there anyone else talking about it?!\u201D It warms my heart. [laughs]\
    \ I think it's going to be, from a software standpoint, open source/closed source.\
    \ I actually think from a career path, these DataOps engineers are a good career\
    \ path, actually. Because I think people are going to need them. I think companies\
    \ are starting projects and their people are getting these approaches."
  sec: 3489
  time: '58:09'
  who: Chris
- line: "For me, I guess, just technically, I did enough data and analytics that like,\
    \ \u201COkay, I can do models. Maybe I'm not the world's best data scientist,\
    \ but I can do some. I can do some visualization. I can do some ETL.\u201D I can\
    \ do it, and those are great, but my perspective is the system. You get the system\
    \ right, you get iterations right, and errors right, and productivity right, and\
    \ measurement right. You get those four things right. You're going to be able\
    \ to power through."
  sec: 3489
  time: '58:09'
  who: Chris
- line: We should be wrapping up, but there is one question. Do you need to go somewhere,
    or do you have a couple of minutes?
  sec: 3617
  time: '1:00:17'
  who: Alexey
- line: I have a couple minutes.
  sec: 3625
  time: '1:00:25'
  who: Chris
- header: The DataOps Cookbook
- line: "I know that you have a book called \u201CThe DataOps Cookbook,\u201D so I\
    \ see that you love these cooking metaphors. Of course, what kind of books would\
    \ you have in a Data Kitchen? So maybe you can briefly tell us what is in this\
    \ book? I know this is a free book, so everyone can just go to your website and\
    \ download it. Maybe you can briefly tell us about the table of contents and what\
    \ people can learn from this book."
  sec: 3627
  time: '1:00:27'
  who: Alexey
- line: "Yeah. If you want to learn more, there's the DataOps Manifesto. That's 18\
    \ points, one page. There's a cookbook, which is about 150 pages with lots of\
    \ pictures. And it goes one level deeper on what I talked about, like \u201CHow\
    \ do you write a test?\u201D \u201CWhat is a good test?\u201D \u201CHow do you\
    \ organize a team?\u201D \u201CHow do you track errors?\u201D It's got lots of\
    \ pictures and examples. Then we've even got a three hour video with questions,\
    \ certification if you're wanting to do that. So we've invested a lot. We have\
    \ a second book too, if you're more of a manager, and you're like, \u201CThese\
    \ ideas are good. How do I get my team to adopt them? How do I lead DataOps from\
    \ the top down?\u201D So we\u2019ve spent a lot of time making sure that people\
    \ have these free resources to learn and to spread the ideas."
  sec: 3652
  time: '1:00:52'
  who: Chris
- line: Yeah, thanks a lot for putting this together. These are invaluable resources,
    I will make sure to include all these links in the description so that everyone
    who is watching this can find them. And thank you for joining us today, for sharing
    your experience, telling us your stories. Thanks a lot for that. That's great.
    Also, thank you everyone for joining us today, for watching us, and for asking
    questions.
  sec: 3708
  time: '1:01:48'
  who: Alexey
- line: Thank you for the opportunity. To all the listeners. It was good. Hopefully,
    you enjoyed the storytime and stayed awake.
  sec: 3734
  time: '1:02:14'
  who: Chris
- line: '[chuckles] Well, have a great weekend.'
  sec: 3744
  time: '1:02:24'
  who: Alexey
